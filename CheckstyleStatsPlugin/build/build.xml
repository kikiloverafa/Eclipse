<project name="CheckstyleStatsPlugin" default="build.dist" basedir="../">

	<!-- get the environment properties specific to each developer machine -->
	<property file="${basedir}/build/env.properties" />

	<!-- properties that likely change between releases -->
	<property file="${basedir}/build/version.properties" />

	<!-- file and directory settings -->
	<property name="fragment.name" value="net.sf.eclipsecs.stats_${fragment.version}" />

	<!-- conditionalize the result dist dir -->
	<condition property="dist.basedir" value="${basedir}/dist/">
		<not>
			<isset property="dist.basedir" />
		</not>
	</condition>

	<property name="dist.basedir.tmpdir" value="${basedir}/dist/tmp" />

	<!-- file names for the files to be distributed -->
	<property name="bin.dist.file" value="${fragment.name}${fragment.version.postfix}-bin.zip" />
	<property name="src.dist.file" value="${fragment.name}${fragment.version.postfix}-src.zip" />
	<property name="fragment.jar.file" value="${fragment.name}.jar" />

	<!-- define ant4eclipse (used for compilation support) -->
	<taskdef resource="net/sf/ant4eclipse/antlib.xml" classpath="${basedir}/build/ant4eclipse-0.4.1.jar" />

	<!-- ==================================================== -->
	<!--   CLEAN TARGET                                       -->
	<!-- ==================================================== -->
	<target name="clean" description="Cleans any directories and generated files">
		<delete dir="${dist.basedir}" failonerror="false" quiet="true" />
	</target>

	<!-- ==================================================== -->
	<!--   BUILD TARGET AREA                                  -->
	<!-- ==================================================== -->
	<target name="build.target.area" description="Build the directory structure of the target area">
		<mkdir dir="${dist.basedir}" />
		<mkdir dir="${dist.basedir.tmpdir}" />
	</target>

	<!-- ==================================================== -->
	<!--   DISTRIBUTION TARGET                                -->
	<!-- ==================================================== -->
	<target name="build.dist" depends="build.bindist,build.srcdist,merge.into.plugin.bin.zip,merge.into.plugin.src.zip,merge.into.update.site" />

	<!-- ==================================================== -->
	<!--   COMPILE TARGET                                     -->
	<!-- ==================================================== -->
	<target name="compile.sources" depends="build.target.area">

		<!-- init -->
		<mkdir dir="${dist.basedir.tmpdir}/bin" />

		<!-- read the eclipse classpath -->
		<getEclipseClasspath project="${basedir}" classpathId="fragment.classpath" targetPlatformLocation="${eclipse.platform.dir}" />

		<!-- compile -->
		<javac fork="true" srcdir="${basedir}/src" destdir="${dist.basedir.tmpdir}/bin" classpathref="fragment.classpath" source="1.4" debug="on" />

		<!-- copy properties and other stuff -->
		<copy todir="${dist.basedir.tmpdir}/bin">
			<fileset dir="${basedir}/src" includes="**/*.properties" />
		</copy>
	</target>


	<!-- ==================================================== -->
	<!--   BINARY DISTRIBUTION TARGET                         -->
	<!-- ==================================================== -->
	<target name="build.bindist" depends="build.target.area,compile.sources" description="Builds the binary distribution file">

		<!-- prefix paths within the binary dist file -->
		<property name="plugins.path" value="plugins/${fragment.name}" />
		<property name="features.path" value="features/${fragment.name}" />

		<!-- jar the contents of the output dirs into the tmp directory -->
		<jar destfile="${dist.basedir.tmpdir}/StatsCheckstyle.jar" basedir="${dist.basedir.tmpdir}/bin" index="true" />

		<!-- remove the class file directories -->
		<delete dir="${dist.basedir.tmpdir}/bin" failonerror="false" quiet="true" />
		<delete dir="${dist.basedir.tmpdir}/binnls" failonerror="false" quiet="true" />

		<!-- copy the plugin contents to the tmp dir -->
		<copy todir="${dist.basedir.tmpdir}/">
			<fileset dir="${basedir}">
				<include name="lib/**" />
				<include name="fragment.xml" />
				<include name="*.properties" />
				<include name="META-INF/**" />
				<include name="icons/**" />
				<include name="license/**" />
				<include name="readme.txt" />
			</fileset>
		</copy>

		<!-- zip the contents into the binary dist file -->
		<zip destfile="${dist.basedir}/${bin.dist.file}" update="false">
			<zipfileset dir="${dist.basedir.tmpdir}" prefix="${plugins.path}" includes="**/*" />
		</zip>

		<!-- build the jars for the update site -->
		<zip destfile="${dist.basedir}/${fragment.jar.file}">
			<zipfileset dir="${dist.basedir.tmpdir}" includes="**/*" />
		</zip>

		<!-- remove the temp directory -->
		<delete dir="${dist.basedir.tmpdir}" failonerror="false" quiet="true" />
	</target>

	<!-- ==================================================== -->
	<!--   SOURCE DISTRIBUTION TARGET                         -->
	<!-- ==================================================== -->
	<target name="build.srcdist" depends="build.target.area" description="Builds the source distribution file">

		<!-- The other way around is easier, just include all but the ouput directories -->
		<zip destfile="${dist.basedir}/${src.dist.file}" update="false">
			<zipfileset dir="${basedir}" includes="**/*" prefix="CheckstyleStatsPlugin">
				<exclude name=".settings/**" />
				<exclude name="dist/**" />
				<exclude name="bin/**" />
				<exclude name="build/env.properties" />
			</zipfileset>
		</zip>
	</target>

	<!-- ==================================================== -->
	<!--   MERGE WITH PLUGIN DISTRIBUTION                     -->
	<!-- ==================================================== -->
	<target name="merge.into.plugin.bin.zip" if="plugin.bin.zip">
		<zip destfile="${plugin.bin.zip}" update="true">
			<zipfileset src="${dist.basedir}/${bin.dist.file}" includes="**/*" />
		</zip>
		<delete file="${dist.basedir}/${bin.dist.file}" />
	</target>

	<target name="merge.into.plugin.src.zip" if="plugin.src.zip">
		<zip destfile="${plugin.src.zip}" update="true">
			<zipfileset src="${dist.basedir}/${src.dist.file}" includes="**/*" />
		</zip>
		<delete file="${dist.basedir}/${src.dist.file}" />
	</target>

	<target name="merge.into.update.site" if="update.site.file">
		<zip destfile="${update.site.file}" update="true">
			<zipfileset dir="${dist.basedir}" prefix="plugins" includes="${fragment.jar.file}" />
		</zip>
	</target>
</project>